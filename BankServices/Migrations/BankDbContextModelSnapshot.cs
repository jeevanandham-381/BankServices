// <auto-generated />
using System;
using BankServices.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BankServices.Migrations
{
    [DbContext(typeof(BankDbContext))]
    partial class BankDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BankServices.models.Account", b =>
                {
                    b.Property<int>("accountid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("accountid"));

                    b.Property<string>("accountnumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("balance")
                        .HasColumnType("numeric");

                    b.Property<int?>("bankid")
                        .HasColumnType("integer");

                    b.Property<int>("customerid")
                        .HasColumnType("integer");

                    b.HasKey("accountid");

                    b.HasIndex("bankid");

                    b.HasIndex("customerid");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("BankServices.models.Bank", b =>
                {
                    b.Property<int>("bankid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("bankid"));

                    b.Property<string>("bankname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("bankid");

                    b.ToTable("banks");
                });

            modelBuilder.Entity("BankServices.models.Customer", b =>
                {
                    b.Property<int>("customerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("customerid"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("customerid");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("BankServices.models.Account", b =>
                {
                    b.HasOne("BankServices.models.Bank", null)
                        .WithMany("accounts")
                        .HasForeignKey("bankid");

                    b.HasOne("BankServices.models.Customer", "customer")
                        .WithMany("accounts")
                        .HasForeignKey("customerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("BankServices.models.Bank", b =>
                {
                    b.Navigation("accounts");
                });

            modelBuilder.Entity("BankServices.models.Customer", b =>
                {
                    b.Navigation("accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
